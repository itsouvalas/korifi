apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: korifi-controllers-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: korifi-controllers-system/korifi-controllers-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: cfapps.workloads.cloudfoundry.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: korifi-controllers-webhook-service
          namespace: korifi-controllers-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: workloads.cloudfoundry.org
  names:
    kind: CFApp
    listKind: CFAppList
    plural: cfapps
    singular: cfapp
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFApp is the Schema for the cfapps API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFAppSpec defines the desired state of CFApp
            properties:
              currentDropletRef:
                description: CurrentDropletRef provides reference to the droplet currently
                  assigned (active) for the app
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              desiredState:
                description: 'Specifies the current state of the CFApp Allowed values
                  are: "STARTED": App is started "STOPPED": App is stopped'
                enum:
                - STOPPED
                - STARTED
                type: string
              displayName:
                description: DisplayName defines the name of the app This is more
                  restrictive than CC's app model- to make default route validation
                  errors less likely
                pattern: ^[-\w]+$
                type: string
              envSecretName:
                description: Name of a secret containing a map of multiple environment
                  variables passed to every CFProcess of the app
                type: string
              lifecycle:
                description: Lifecycle specifies how to build droplets
                properties:
                  data:
                    description: Lifecycle data used to specify details for the Lifecycle
                    properties:
                      buildpacks:
                        description: List of buildpacks used to build the app
                        items:
                          type: string
                        type: array
                      stack:
                        type: string
                    required:
                    - stack
                    type: object
                  type:
                    description: 'Specifies the CF Lifecycle type: Valid values are:
                      "buildpack": stage the app using kpack'
                    enum:
                    - buildpack
                    type: string
                required:
                - data
                - type
                type: object
            required:
            - desiredState
            - displayName
            - lifecycle
            type: object
          status:
            description: CFAppStatus defines the observed state of CFApp
            properties:
              conditions:
                description: Conditions capture the current status of the App
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedDesiredState:
                description: DesiredState defines the desired state of CFApp.
                enum:
                - STOPPED
                - STARTED
                type: string
            required:
            - conditions
            - observedDesiredState
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: korifi-controllers-system/korifi-controllers-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: cfbuilds.workloads.cloudfoundry.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: korifi-controllers-webhook-service
          namespace: korifi-controllers-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: workloads.cloudfoundry.org
  names:
    kind: CFBuild
    listKind: CFBuildList
    plural: cfbuilds
    singular: cfbuild
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFBuild is the Schema for the cfbuilds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFBuildSpec defines the desired state of CFBuild
            properties:
              appRef:
                description: Specifies the CFApp associated with this build
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              lifecycle:
                description: Specifies the buildpacks and stack for the build
                properties:
                  data:
                    description: Lifecycle data used to specify details for the Lifecycle
                    properties:
                      buildpacks:
                        description: List of buildpacks used to build the app
                        items:
                          type: string
                        type: array
                      stack:
                        type: string
                    required:
                    - stack
                    type: object
                  type:
                    description: 'Specifies the CF Lifecycle type: Valid values are:
                      "buildpack": stage the app using kpack'
                    enum:
                    - buildpack
                    type: string
                required:
                - data
                - type
                type: object
              packageRef:
                description: Specifies the CFPackage associated with this build
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              stagingDiskMB:
                description: Specifies the disk request for the staging image - Do
                  we need this?
                type: integer
              stagingMemoryMB:
                description: Specifies the memory request for the staging image
                type: integer
            required:
            - appRef
            - lifecycle
            - packageRef
            - stagingDiskMB
            - stagingMemoryMB
            type: object
          status:
            description: CFBuildStatus defines the observed state of CFBuild
            properties:
              conditions:
                description: Conditions capture the current status of the Build
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              droplet:
                description: BuildDropletStatus defines the observed state of the
                  CFBuild's Droplet or runnable image
                properties:
                  ports:
                    description: Specifies the exposed ports for the application
                    items:
                      format: int32
                      type: integer
                    type: array
                  processTypes:
                    description: Specifies the process types and associated start
                      commands for the Droplet
                    items:
                      description: ProcessType is a map of process names and associated
                        start commands for the Droplet
                      properties:
                        command:
                          type: string
                        type:
                          type: string
                      required:
                      - command
                      - type
                      type: object
                    type: array
                  registry:
                    description: Specifies the Container registry image, and secrets
                      to access
                    properties:
                      image:
                        description: Image specifies the location of the source image
                        type: string
                      imagePullSecrets:
                        description: ImagePullSecrets specifies a list of secrets
                          required to access the image
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        type: array
                    required:
                    - image
                    type: object
                  stack:
                    description: Specifies the stack used to build the Droplet
                    type: string
                required:
                - ports
                - processTypes
                - registry
                - stack
                type: object
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: korifi-controllers-system/korifi-controllers-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: cfdomains.networking.cloudfoundry.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: korifi-controllers-webhook-service
          namespace: korifi-controllers-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: networking.cloudfoundry.org
  names:
    kind: CFDomain
    listKind: CFDomainList
    plural: cfdomains
    singular: cfdomain
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Domain Name
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFDomain is the Schema for the cfdomains API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFDomainSpec defines the desired state of CFDomain
            properties:
              name:
                description: Domain name is required and conforms to RFC 1035
                type: string
            required:
            - name
            type: object
          status:
            description: CFDomainStatus defines the observed state of CFDomain
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cforgs.workloads.cloudfoundry.org
spec:
  group: workloads.cloudfoundry.org
  names:
    kind: CFOrg
    listKind: CFOrgList
    plural: cforgs
    singular: cforg
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFOrg is the Schema for the cforgs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFOrgSpec defines the desired state of CFOrg
            properties:
              displayName:
                description: DisplayName that is displayed to users
                pattern: ^[-\w]+$
                type: string
            required:
            - displayName
            type: object
          status:
            description: CFOrgStatus defines the observed state of CFOrg
            properties:
              conditions:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              guid:
                type: string
            required:
            - conditions
            - guid
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: korifi-controllers-system/korifi-controllers-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: cfpackages.workloads.cloudfoundry.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: korifi-controllers-webhook-service
          namespace: korifi-controllers-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: workloads.cloudfoundry.org
  names:
    kind: CFPackage
    listKind: CFPackageList
    plural: cfpackages
    singular: cfpackage
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFPackage is the Schema for the cfpackages API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFPackageSpec defines the desired state of CFPackage
            properties:
              appRef:
                description: AppRef reference to the CFApp that owns this package
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              source:
                description: Source contains the details for the source image(bits)
                properties:
                  registry:
                    description: registry ( Source code is an OCI image in a registry
                      that contains application source)
                    properties:
                      image:
                        description: Image specifies the location of the source image
                        type: string
                      imagePullSecrets:
                        description: ImagePullSecrets specifies a list of secrets
                          required to access the image
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        type: array
                    required:
                    - image
                    type: object
                required:
                - registry
                type: object
              type:
                description: 'Type specifies the package type Valid values are: "bits":
                  package to upload source code'
                enum:
                - bits
                type: string
            required:
            - appRef
            - type
            type: object
          status:
            description: CFPackageStatus defines the observed state of CFPackage
            properties:
              conditions:
                description: Conditions capture the current status of the Package
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: korifi-controllers-system/korifi-controllers-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: cfprocesses.workloads.cloudfoundry.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: korifi-controllers-webhook-service
          namespace: korifi-controllers-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: workloads.cloudfoundry.org
  names:
    kind: CFProcess
    listKind: CFProcessList
    plural: cfprocesses
    singular: cfprocess
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFProcess is the Schema for the cfprocesses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFProcessSpec defines the desired state of CFProcess
            properties:
              appRef:
                description: Specifies the App that owns this process
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              command:
                description: Specifies the Command(k8s) ENTRYPOINT(Docker) of the
                  Process
                type: string
              desiredInstances:
                description: Specifies the desired number of Process replicas to deploy
                type: integer
              diskQuotaMB:
                description: Specifies the Process disk limit
                format: int64
                type: integer
              healthCheck:
                description: Specifies the Liveness Probe (k8s) details of the Process
                properties:
                  data:
                    description: Specifies the input parameters for the liveness probe/health
                      check in kubernetes
                    properties:
                      httpEndpoint:
                        description: HTTPEndpoint is only used by an "http" liveness
                          probe
                        type: string
                      invocationTimeoutSeconds:
                        format: int64
                        type: integer
                      timeoutSeconds:
                        format: int64
                        type: integer
                    required:
                    - invocationTimeoutSeconds
                    - timeoutSeconds
                    type: object
                  type:
                    description: 'Specifies the type of Health Check the App process
                      will use Valid values are: "http": http health check "port":
                      TCP health check "process" (default): checks if process for
                      start command is still alive'
                    enum:
                    - http
                    - port
                    - process
                    type: string
                required:
                - data
                - type
                type: object
              memoryMB:
                description: Specifies the Process memory limit
                format: int64
                type: integer
              ports:
                description: Specifies the Process ports to expose
                items:
                  format: int32
                  type: integer
                type: array
              processType:
                description: Specifies the name of the process in the App
                type: string
            required:
            - appRef
            - desiredInstances
            - diskQuotaMB
            - healthCheck
            - memoryMB
            - ports
            - processType
            type: object
          status:
            description: CFProcessStatus defines the observed state of CFProcess
            properties:
              conditions:
                description: Conditions capture the current status of the Process
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              runningInstances:
                description: RunningInstances captures the actual number of Process
                  replicas
                type: integer
            required:
            - conditions
            - runningInstances
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: korifi-controllers-system/korifi-controllers-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: cfroutes.networking.cloudfoundry.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: korifi-controllers-webhook-service
          namespace: korifi-controllers-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: networking.cloudfoundry.org
  names:
    kind: CFRoute
    listKind: CFRouteList
    plural: cfroutes
    singular: cfroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.uri
      name: URI
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFRoute is the Schema for the cfroutes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFRouteSpec defines the desired state of CFRoute
            properties:
              destinations:
                description: Destinations are optional, a route can exist independently
                  of being mapped to apps.
                items:
                  description: Destination defines a target for a CFRoute, does not
                    carry meaning outside of a CF context
                  properties:
                    appRef:
                      description: App ref is required, part of the identity of a
                        running process to which traffic may be routed We use a ref
                        because the app must exist
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    guid:
                      description: GUID is required to support CF V3 Destination endpoints
                      type: string
                    port:
                      description: Port is optional, defaults to ProcessModel::DEFAULT_HTTP_PORT
                      type: integer
                    processType:
                      description: Process type is required, part of the identity
                        of a running process to which traffic may be routed We use
                        process type instead of processRef because a process of the
                        type may not exist at time of destination creation
                      type: string
                    protocol:
                      description: Protocol is required, must be "http1"
                      enum:
                      - http1
                      type: string
                  required:
                  - appRef
                  - guid
                  - processType
                  - protocol
                  type: object
                type: array
              domainRef:
                description: Domain ref is required, provides base domain name and
                  allowed protocol info.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              host:
                description: Host is optional, defaults to empty. For cf push default
                  route, uses the name of the app.
                type: string
              path:
                description: Path is optional, defaults to empty.
                type: string
              protocol:
                description: Protocol is optional, defaults to http. Dependent on
                  allow-listed protocols on domain.
                enum:
                - http
                - tcp
                type: string
            required:
            - domainRef
            type: object
          status:
            description: CFRouteStatus defines the observed state of CFRoute
            properties:
              conditions:
                description: Conditions capture the current status of the route
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              currentStatus:
                description: CurrentStatus declares whether the CFRoute is currently
                  valid or invalid
                enum:
                - valid
                - invalid
                type: string
              description:
                type: string
              destinations:
                description: Destinations capture the observed state of the destinations
                  mainly for recording the target port of the underlying service
                items:
                  description: Destination defines a target for a CFRoute, does not
                    carry meaning outside of a CF context
                  properties:
                    appRef:
                      description: App ref is required, part of the identity of a
                        running process to which traffic may be routed We use a ref
                        because the app must exist
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    guid:
                      description: GUID is required to support CF V3 Destination endpoints
                      type: string
                    port:
                      description: Port is optional, defaults to ProcessModel::DEFAULT_HTTP_PORT
                      type: integer
                    processType:
                      description: Process type is required, part of the identity
                        of a running process to which traffic may be routed We use
                        process type instead of processRef because a process of the
                        type may not exist at time of destination creation
                      type: string
                    protocol:
                      description: Protocol is required, must be "http1"
                      enum:
                      - http1
                      type: string
                  required:
                  - appRef
                  - guid
                  - processType
                  - protocol
                  type: object
                type: array
              fqdn:
                description: FQDN captures the fully-qualified domain name for the
                  route
                type: string
              uri:
                description: URI captures the URI (FQDN + path) for the route
                type: string
            required:
            - currentStatus
            - description
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cfservicebindings.services.cloudfoundry.org
spec:
  group: services.cloudfoundry.org
  names:
    kind: CFServiceBinding
    listKind: CFServiceBindingList
    plural: cfservicebindings
    singular: cfservicebinding
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFServiceBinding is the Schema for the cfservicebindings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFServiceBindingSpec defines the desired state of CFServiceBinding
            properties:
              appRef:
                description: Specifies the App that owns this process
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              displayName:
                description: DisplayName defines the name of the Service Binding
                type: string
              service:
                description: Specifies the Service this binding uses
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            required:
            - appRef
            - service
            type: object
          status:
            description: CFServiceBindingStatus defines the observed state of CFServiceBinding
            properties:
              binding:
                description: A reference to the Secret containing the credentials
                  (same as spec.secretName). This is required to conform to the Kubernetes
                  Service Bindings spec
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              conditions:
                description: Conditions capture the current status of the CFServiceBinding
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - binding
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cfserviceinstances.services.cloudfoundry.org
spec:
  group: services.cloudfoundry.org
  names:
    kind: CFServiceInstance
    listKind: CFServiceInstanceList
    plural: cfserviceinstances
    singular: cfserviceinstance
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFServiceInstance is the Schema for the cfserviceinstances API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFServiceInstanceSpec defines the desired state of CFServiceInstance
            properties:
              displayName:
                description: DisplayName defines the name of the Service Instance
                type: string
              secretName:
                description: Name of a secret containing the service credentials
                type: string
              tags:
                description: Tags are used by apps to identify service instances
                items:
                  type: string
                type: array
              type:
                description: Type of the Service Instance. Must be `user-provided`
                enum:
                - user-provided
                type: string
            required:
            - displayName
            - secretName
            - type
            type: object
          status:
            description: CFServiceInstanceStatus defines the observed state of CFServiceInstance
            properties:
              binding:
                description: A reference to the Secret containing the credentials
                  (same as spec.secretName). This is required to conform to the Kubernetes
                  Service Bindings spec
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              conditions:
                description: Conditions capture the current status of the CFServiceInstance
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - binding
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cfspaces.workloads.cloudfoundry.org
spec:
  group: workloads.cloudfoundry.org
  names:
    kind: CFSpace
    listKind: CFSpaceList
    plural: cfspaces
    singular: cfspace
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CFSpace is the Schema for the cfspaces API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CFSpaceSpec defines the desired state of CFSpace
            properties:
              displayName:
                description: DisplayName of the space displayed to the user
                pattern: ^[-\w]+$
                type: string
            required:
            - displayName
            type: object
          status:
            description: CFSpaceStatus defines the observed state of CFSpace
            properties:
              conditions:
                description: Conditions capture the current status of the CFSpace
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              guid:
                type: string
            required:
            - conditions
            - guid
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: korifi-controllers-controller-manager
  namespace: korifi-controllers-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: korifi-controllers-leader-election-role
  namespace: korifi-controllers-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korifi-controllers-admin
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - patch
  - get
  - create
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cforgs
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfspaces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps
  verbs:
  - get
  - create
  - patch
  - delete
  - list
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses
  verbs:
  - create
  - get
  - list
  - patch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages
  verbs:
  - get
  - list
  - create
  - patch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds
  verbs:
  - get
  - list
  - create
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfserviceinstances
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfservicebindings
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfdomains
  verbs:
  - get
  - list
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kpack.io
  resources:
  - clusterbuilders
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
- apiGroups:
  - hnc.x-k8s.io
  resources:
  - subnamespaceanchors
  verbs:
  - create
  - delete
- apiGroups:
  - hnc.x-k8s.io
  resources:
  - hierarchyconfigurations
  verbs:
  - patch
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    servicebinding.io/controller: "true"
  name: korifi-controllers-cfservicebinding-reconciler-role
rules:
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfservicebindings
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: korifi-controllers-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/status
  - serviceaccounts/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - patch
- apiGroups:
  - eirini.cloudfoundry.org
  resources:
  - lrps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hnc.x-k8s.io
  resources:
  - hierarchyconfigurations
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hnc.x-k8s.io
  resources:
  - subnamespaceanchors
  verbs:
  - create
  - delete
  - list
  - watch
- apiGroups:
  - kpack.io
  resources:
  - images
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kpack.io
  resources:
  - images/finalizers
  verbs:
  - update
- apiGroups:
  - kpack.io
  resources:
  - images/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfdomains
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfdomains/finalizers
  verbs:
  - update
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfdomains/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes/finalizers
  verbs:
  - update
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - projectcontour.io
  resources:
  - httpproxies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - projectcontour.io
  resources:
  - httpproxies/finalizers
  verbs:
  - update
- apiGroups:
  - projectcontour.io
  resources:
  - httpproxies/status
  verbs:
  - get
- apiGroups:
  - servicebinding.io
  resources:
  - servicebindings
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfservicebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfservicebindings/finalizers
  verbs:
  - update
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfservicebindings/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfserviceinstances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfserviceinstances/finalizers
  verbs:
  - update
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfserviceinstances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps/finalizers
  verbs:
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds/finalizers
  verbs:
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cforgs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cforgs/finalizers
  verbs:
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cforgs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages/finalizers
  verbs:
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses/finalizers
  verbs:
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfspaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfspaces/finalizers
  verbs:
  - update
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfspaces/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korifi-controllers-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korifi-controllers-organization-manager
rules:
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cforgs
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korifi-controllers-organization-user
rules:
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cforgs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfspaces
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korifi-controllers-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    hncv1alpha2.AnnotationNoneSelector: "true"
  name: korifi-controllers-root-namespace-user
rules:
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfdomains
  verbs:
  - get
  - list
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cforgs
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korifi-controllers-space-auditor
rules:
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps
  verbs:
  - get
  - list
- apiGroups:
  - kpack.io
  resources:
  - clusterbuilders
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korifi-controllers-space-developer
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - patch
  - get
  - create
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps
  verbs:
  - get
  - create
  - patch
  - delete
  - list
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses
  verbs:
  - create
  - get
  - list
  - patch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages
  verbs:
  - get
  - list
  - create
  - patch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds
  verbs:
  - get
  - list
  - create
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfserviceinstances
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfservicebindings
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes
  verbs:
  - get
  - create
  - delete
  - list
  - patch
- apiGroups:
  - kpack.io
  resources:
  - clusterbuilders
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: korifi-controllers-space-manager
rules:
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps
  verbs:
  - get
  - list
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages
  verbs:
  - get
  - list
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses
  verbs:
  - get
  - list
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds
  verbs:
  - get
  - list
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes
  verbs:
  - get
  - list
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfserviceinstances
  verbs:
  - list
  - get
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfservicebindings
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: korifi-controllers-leader-election-rolebinding
  namespace: korifi-controllers-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: korifi-controllers-leader-election-role
subjects:
- kind: ServiceAccount
  name: korifi-controllers-controller-manager
  namespace: korifi-controllers-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: korifi-controllers-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: korifi-controllers-manager-role
subjects:
- kind: ServiceAccount
  name: korifi-controllers-controller-manager
  namespace: korifi-controllers-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: korifi-controllers-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: korifi-controllers-proxy-role
subjects:
- kind: ServiceAccount
  name: korifi-controllers-controller-manager
  namespace: korifi-controllers-system
---
apiVersion: v1
data:
  korifi_controllers_config.yaml: |
    kpackImageTag: gcr.io/cf-relint-greengrass/korifi-controllers/kpack/beta
    clusterBuilderName: cf-kpack-cluster-builder
    cfProcessDefaults:
      memoryMB: 1024
      diskQuotaMB: 1024
    cfRootNamespace: cf
    korifi_controller_namespace: korifi-controllers-system
    workloads_tls_secret_name: korifi-workloads-ingress-cert
kind: ConfigMap
metadata:
  name: korifi-controllers-config
  namespace: korifi-controllers-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 13c200ec.cloudfoundry.org
kind: ConfigMap
metadata:
  name: korifi-controllers-manager-config
  namespace: korifi-controllers-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: korifi-controllers-controller-manager-metrics-service
  namespace: korifi-controllers-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: korifi-controllers-webhook-service
  namespace: korifi-controllers-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: korifi-controllers-controller-manager
  namespace: korifi-controllers-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        env:
        - name: CONTROLLERSCONFIG
          value: /etc/korifi-controllers-config
        image: cloudfoundry/korifi-controllers:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 500Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /etc/korifi-controllers-config
          name: korifi-controllers-config
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: quay.io/brancz/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      securityContext:
        runAsNonRoot: true
      serviceAccountName: korifi-controllers-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - configMap:
          name: korifi-controllers-config
        name: korifi-controllers-config
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: korifi-controllers-serving-cert
  namespace: korifi-controllers-system
spec:
  dnsNames:
  - korifi-controllers-webhook-service.korifi-controllers-system.svc
  - korifi-controllers-webhook-service.korifi-controllers-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: korifi-controllers-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: korifi-controllers-selfsigned-issuer
  namespace: korifi-controllers-system
spec:
  selfSigned: {}
---
apiVersion: projectcontour.io/v1
kind: TLSCertificateDelegation
metadata:
  name: korifi-controllers-workloads-fallback-delegation
  namespace: korifi-controllers-system
spec:
  delegations:
  - secretName: korifi-workloads-ingress-cert
    targetNamespaces:
    - '*'
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: korifi-controllers-system/korifi-controllers-serving-cert
  name: korifi-controllers-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /mutate-networking-cloudfoundry-org-v1alpha1-cfroute
  failurePolicy: Fail
  name: mcfroute.networking.cloudfoundry.org
  rules:
  - apiGroups:
    - networking.cloudfoundry.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cfroutes
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /mutate-workloads-cloudfoundry-org-v1alpha1-cfapp
  failurePolicy: Fail
  name: mcfapp.workloads.cloudfoundry.org
  rules:
  - apiGroups:
    - workloads.cloudfoundry.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cfapps
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /mutate-workloads-cloudfoundry-org-v1alpha1-cfbuild
  failurePolicy: Fail
  name: mcfbuild.workloads.cloudfoundry.org
  rules:
  - apiGroups:
    - workloads.cloudfoundry.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cfbuilds
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /mutate-workloads-cloudfoundry-org-v1alpha1-cfpackage
  failurePolicy: Fail
  name: mcfpackage.workloads.cloudfoundry.org
  rules:
  - apiGroups:
    - workloads.cloudfoundry.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cfpackages
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /mutate-workloads-cloudfoundry-org-v1alpha1-cfprocess
  failurePolicy: Fail
  name: mcfprocess.workloads.cloudfoundry.org
  rules:
  - apiGroups:
    - workloads.cloudfoundry.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cfprocesses
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: korifi-controllers-system/korifi-controllers-serving-cert
  name: korifi-controllers-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /validate-workloads-cloudfoundry-org-v1alpha1-cfapp
  failurePolicy: Fail
  name: vcfapp.workloads.cloudfoundry.org
  rules:
  - apiGroups:
    - workloads.cloudfoundry.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - cfapps
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /validate-hnc-x-k8s-io-v1alpha2-subnamespaceanchor
  failurePolicy: Fail
  name: vsubns.workloads.cloudfoundry.org
  rules:
  - apiGroups:
    - hnc.x-k8s.io
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - subnamespaceanchors
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /validate-networking-cloudfoundry-org-v1alpha1-cfdomain
  failurePolicy: Fail
  name: vcfdomain.kb.io
  rules:
  - apiGroups:
    - networking.cloudfoundry.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cfdomains
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /validate-networking-cloudfoundry-org-v1alpha1-cfroute
  failurePolicy: Fail
  name: vcfroute.networking.cloudfoundry.org
  rules:
  - apiGroups:
    - networking.cloudfoundry.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - cfroutes
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: korifi-controllers-webhook-service
      namespace: korifi-controllers-system
      path: /validate-services-cloudfoundry-org-v1alpha1-cfserviceinstance
  failurePolicy: Fail
  name: vcfserviceinstance.services.cloudfoundry.org
  rules:
  - apiGroups:
    - services.cloudfoundry.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - cfserviceinstances
  sideEffects: None
